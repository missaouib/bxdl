<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzcf.core.mapper.InsProtocolProductMapper">
  <resultMap id="BaseResultMap" type="com.hzcf.pojo.insurance.protocol.InsProtocolProduct">
    <id column="PROTOCOL_PRODUCT_ID" jdbcType="BIGINT" property="protocolProductId" />
    <result column="PROTOCOL_ID" jdbcType="BIGINT" property="protocolId" />
    <result column="PRODUCT_ID" jdbcType="BIGINT" property="productId" />
    <result column="PRODUCT_CODE" jdbcType="VARCHAR" property="productCode" />
    <result column="RELATION_STATUS" jdbcType="CHAR" property="relationStatus" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy" />
    <result column="hesitation_period" property="hesitationPeriod" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PROTOCOL_PRODUCT_ID, PROTOCOL_ID, PRODUCT_ID, PRODUCT_CODE, RELATION_STATUS, CREATE_TIME, 
    UPDATE_TIME, UPDATE_BY, hesitation_period
  </sql>
  <select id="selectByExample" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ins_protocol_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ins_protocol_product
    where PROTOCOL_PRODUCT_ID = #{protocolProductId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ins_protocol_product
    where PROTOCOL_PRODUCT_ID = #{protocolProductId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolProductExample">
    delete from ins_protocol_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolProduct">
    insert into ins_protocol_product (PROTOCOL_PRODUCT_ID, PROTOCOL_ID, PRODUCT_ID, 
      PRODUCT_CODE, RELATION_STATUS, CREATE_TIME, 
      UPDATE_TIME, UPDATE_BY, hesitation_period
      )
    values (#{protocolProductId,jdbcType=BIGINT}, #{protocolId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, 
      #{productCode,jdbcType=VARCHAR}, #{relationStatus,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{hesitationPeriod,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolProduct">
    insert into ins_protocol_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="protocolProductId != null">
        PROTOCOL_PRODUCT_ID,
      </if>
      <if test="protocolId != null">
        PROTOCOL_ID,
      </if>
      <if test="productId != null">
        PRODUCT_ID,
      </if>
      <if test="productCode != null">
        PRODUCT_CODE,
      </if>
      <if test="relationStatus != null">
        RELATION_STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updateBy != null">
        UPDATE_BY,
      </if>
      <if test="hesitationPeriod != null" >
        hesitation_period,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="protocolProductId != null">
        #{protocolProductId,jdbcType=BIGINT},
      </if>
      <if test="protocolId != null">
        #{protocolId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="productCode != null">
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="relationStatus != null">
        #{relationStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="hesitationPeriod != null" >
        #{hesitationPeriod,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolProductExample" resultType="java.lang.Long">
    select count(*) from ins_protocol_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ins_protocol_product
    <set>
      <if test="record.protocolProductId != null">
        PROTOCOL_PRODUCT_ID = #{record.protocolProductId,jdbcType=BIGINT},
      </if>
      <if test="record.protocolId != null">
        PROTOCOL_ID = #{record.protocolId,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        PRODUCT_ID = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.productCode != null">
        PRODUCT_CODE = #{record.productCode,jdbcType=VARCHAR},
      </if>
      <if test="record.relationStatus != null">
        RELATION_STATUS = #{record.relationStatus,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.hesitationPeriod != null" >
        hesitation_period = #{record.hesitationPeriod,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ins_protocol_product
    set PROTOCOL_PRODUCT_ID = #{record.protocolProductId,jdbcType=BIGINT},
      PROTOCOL_ID = #{record.protocolId,jdbcType=BIGINT},
      PRODUCT_ID = #{record.productId,jdbcType=BIGINT},
      PRODUCT_CODE = #{record.productCode,jdbcType=VARCHAR},
      RELATION_STATUS = #{record.relationStatus,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      hesitation_period = #{record.hesitationPeriod,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolProduct">
    update ins_protocol_product
    <set>
      <if test="protocolId != null">
        PROTOCOL_ID = #{protocolId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        PRODUCT_ID = #{productId,jdbcType=BIGINT},
      </if>
      <if test="productCode != null">
        PRODUCT_CODE = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="relationStatus != null">
        RELATION_STATUS = #{relationStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="hesitationPeriod != null" >
        hesitation_period = #{hesitationPeriod,jdbcType=INTEGER},
      </if>
    </set>
    where PROTOCOL_PRODUCT_ID = #{protocolProductId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolProduct">
    update ins_protocol_product
    set PROTOCOL_ID = #{protocolId,jdbcType=BIGINT},
      PRODUCT_ID = #{productId,jdbcType=BIGINT},
      PRODUCT_CODE = #{productCode,jdbcType=VARCHAR},
      RELATION_STATUS = #{relationStatus,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      hesitation_period = #{hesitationPeriod,jdbcType=INTEGER}
    where PROTOCOL_PRODUCT_ID = #{protocolProductId,jdbcType=BIGINT}
  </update>
  
  <!-- 批量新增 -->
    <insert id="insertBatch" parameterType="java.util.List">
 	 insert into ins_protocol_product (
	 	  PROTOCOL_ID, 
	 	  PRODUCT_ID, 
	      PRODUCT_CODE,
	      RELATION_STATUS,
	      CREATE_TIME, 
	      UPDATE_BY,
          hesitation_period
      )
      values
  	<foreach collection="list" item="item" index="index" separator=",">
  		 (
	  		  #{item.protocolId}, 
	  		  #{item.productId},
	  		  #{item.productCode}, 
	  		  #{item.relationStatus}, 
	  		  #{item.createTime}, 
	  		  #{item.updateBy},
              #{item.hesitationPeriod}
  		)
    </foreach>	
  </insert>
  
  <!-- 查询产品管理列表 -->
  <select id="findAllRetMapByPage" parameterType="hashmap" resultType="hashmap">
 		SELECT
 			pro.PROTOCOL_PRODUCT_ID,
			info.PRODUCT_NAME P_PRODUCT_NAME,
			info.PRODUCT_ID P_PRODUCT_ID,
			ratio.PRODUCTS_NAME S_PRODUCTS_NAME,
		  	ratio.PRODUCTS_CODE S_PRODUCTS_CODE,
			ratio.PRODUCTS_RATIO_ID,
			info.COMPANY_INSURANCE_CODE,
			  CASE
						WHEN info.MAIN_OR_ADDITIONAL = '0' THEN
							'主险'
						WHEN info.MAIN_OR_ADDITIONAL = '1' THEN
							'附险'
						END AS MAIN_OR_ADDITIONAL,
			pro.PRODUCT_ID,
			pro.PROTOCOL_ID,
			pro.hesitation_period
			 FROM
				ins_protocol_product pro 
	left join  ins_products_commission_ratio ratio on pro.PRODUCT_ID = ratio.PRODUCTS_RATIO_ID
	left join insurance_product_info info on ratio.INSURANCE_PRODUCT_ID = info.PRODUCT_ID
	where pro.PROTOCOL_ID = #{protocolId}
	And pro.RELATION_STATUS = '0'
	order by pro.CREATE_TIME desc 
	limit #{startIndex},#{pageSize}
  </select>
  
   <!-- 查询总条数 -->
  <select id="findAllByPageCount" parameterType="hashmap" resultType="long">
 	 SELECT
 		count(1)
  	 FROM
		ins_protocol_product pro 
	left join  ins_products_commission_ratio ratio on pro.PRODUCT_ID = ratio.PRODUCTS_RATIO_ID
	left join insurance_product_info info on ratio.INSURANCE_PRODUCT_ID = info.PRODUCT_ID
  	where pro.PROTOCOL_ID = #{protocolId}
  	And pro.RELATION_STATUS = '0'
  </select>
  
  
   <!-- 查询协议产品公共列表 -->
  <select id="getProtocolProductList" parameterType="hashmap" resultType="hashmap">
 		SELECT
			info.PRODUCT_NAME,
  			pro.PROTOCOL_ID,
  			ratio.PRODUCTS_RATIO_ID,
			ratio.PRODUCTS_NAME,
			info.COMPANY_INSURANCE_CODE,
  			ratio.PRODUCTS_CODE,
  			pro.PRODUCT_ID,
  			CASE
				WHEN info.MAIN_OR_ADDITIONAL = '0' THEN
					'主险'
				WHEN info.MAIN_OR_ADDITIONAL = '1' THEN
					'附险'
				END AS MAIN_OR_ADDITIONAL,
			ratio.OUT_STANDARD_COMMISSION_COEFFICIENT,
			ratio.INSURANCE_PERIOD_MIN,
			ratio.INSURANCE_PERIOD_MAX,
			ratio.RENEW_PERIOD_MIN,
			ratio.RENEW_PERIOD_MAX
		FROM
			ins_protocol_product pro
		left join ins_products_commission_ratio ratio on pro.PRODUCT_ID = ratio.PRODUCTS_RATIO_ID
		left join insurance_product_info info on ratio.INSURANCE_PRODUCT_ID = info.PRODUCT_ID
		where pro.PROTOCOL_ID =#{protocolId}
		And pro.RELATION_STATUS = '0'
		ORDER by pro.CREATE_TIME desc
		limit #{startIndex},#{pageSize}
  </select>

 <!-- 查询协议产品公共总条数 -->
  <select id="getProtocolProductCount" parameterType="hashmap" resultType="long">
 	SELECT
			count(1)
		FROM
			ins_protocol_product pro
		left join ins_products_commission_ratio ratio on pro.PRODUCT_ID = ratio.PRODUCTS_RATIO_ID
		left join insurance_product_info info on ratio.INSURANCE_PRODUCT_ID = info.PRODUCT_ID
		where pro.PROTOCOL_ID =#{protocolId}
		And pro.RELATION_STATUS = '0'
  </select>
  
    <select id="queryInsProtocolProductByProtocolId" parameterType="long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM ins_protocol_product WHERE PROTOCOL_ID = #{protocolId} AND RELATION_STATUS = 0
    </select>

    <select id="queryProductIdsByProtocolId" parameterType="long" resultType="long">
        SELECT PRODUCT_ID
        FROM ins_protocol_product WHERE PROTOCOL_ID = #{protocolId} AND RELATION_STATUS = 0
    </select>

    <update id="updateProrocolProduct" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolProduct">
      update ins_protocol_product
      set hesitation_period = #{hesitationPeriod}
        <if test="updateBy != null">
            ,UPDATE_BY = #{updateBy}
        </if>
        <if test="updateBy != null">
            ,UPDATE_TIME = #{updateTime}
        </if>
        where
          PROTOCOL_PRODUCT_ID = #{protocolProductId}
    </update>
  
</mapper>