<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzcf.core.mapper.InsProtocolImageMapper">
  <resultMap id="BaseResultMap" type="com.hzcf.pojo.insurance.protocol.InsProtocolImage">
    <id column="PROTOCOL_IMAGE_ID" jdbcType="BIGINT" property="protocolImageId" />
    <result column="PROTOCOL_ID" jdbcType="BIGINT" property="protocolId" />
    <result column="IMAGE_NAME" jdbcType="VARCHAR" property="imageName" />
    <result column="FAST_URL" jdbcType="VARCHAR" property="fastUrl" />
    <result column="IMAGE_STATUS" jdbcType="CHAR" property="imageStatus" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="UPDATE_BY" jdbcType="VARCHAR" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PROTOCOL_IMAGE_ID, PROTOCOL_ID, IMAGE_NAME, FAST_URL, IMAGE_STATUS, CREATE_TIME, 
    UPDATE_TIME, UPDATE_BY
  </sql>
  <select id="selectByExample" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolImageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ins_protocol_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ins_protocol_image
    where PROTOCOL_IMAGE_ID = #{protocolImageId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ins_protocol_image
    where PROTOCOL_IMAGE_ID = #{protocolImageId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolImageExample">
    delete from ins_protocol_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolImage">
    insert into ins_protocol_image (PROTOCOL_IMAGE_ID, PROTOCOL_ID, IMAGE_NAME, 
      FAST_URL, IMAGE_STATUS, CREATE_TIME, 
      UPDATE_TIME, UPDATE_BY)
    values (#{protocolImageId,jdbcType=BIGINT}, #{protocolId,jdbcType=BIGINT}, #{imageName,jdbcType=VARCHAR}, 
      #{fastUrl,jdbcType=VARCHAR}, #{imageStatus,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolImage">
    insert into ins_protocol_image
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="protocolImageId != null">
        PROTOCOL_IMAGE_ID,
      </if>
      <if test="protocolId != null">
        PROTOCOL_ID,
      </if>
      <if test="imageName != null">
        IMAGE_NAME,
      </if>
      <if test="fastUrl != null">
        FAST_URL,
      </if>
      <if test="imageStatus != null">
        IMAGE_STATUS,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updateBy != null">
        UPDATE_BY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="protocolImageId != null">
        #{protocolImageId,jdbcType=BIGINT},
      </if>
      <if test="protocolId != null">
        #{protocolId,jdbcType=BIGINT},
      </if>
      <if test="imageName != null">
        #{imageName,jdbcType=VARCHAR},
      </if>
      <if test="fastUrl != null">
        #{fastUrl,jdbcType=VARCHAR},
      </if>
      <if test="imageStatus != null">
        #{imageStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolImageExample" resultType="java.lang.Long">
    select count(*) from ins_protocol_image
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ins_protocol_image
    <set>
      <if test="record.protocolImageId != null">
        PROTOCOL_IMAGE_ID = #{record.protocolImageId,jdbcType=BIGINT},
      </if>
      <if test="record.protocolId != null">
        PROTOCOL_ID = #{record.protocolId,jdbcType=BIGINT},
      </if>
      <if test="record.imageName != null">
        IMAGE_NAME = #{record.imageName,jdbcType=VARCHAR},
      </if>
      <if test="record.fastUrl != null">
        FAST_URL = #{record.fastUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.imageStatus != null">
        IMAGE_STATUS = #{record.imageStatus,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ins_protocol_image
    set PROTOCOL_IMAGE_ID = #{record.protocolImageId,jdbcType=BIGINT},
      PROTOCOL_ID = #{record.protocolId,jdbcType=BIGINT},
      IMAGE_NAME = #{record.imageName,jdbcType=VARCHAR},
      FAST_URL = #{record.fastUrl,jdbcType=VARCHAR},
      IMAGE_STATUS = #{record.imageStatus,jdbcType=CHAR},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      UPDATE_BY = #{record.updateBy,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolImage">
    update ins_protocol_image
    <set>
      <if test="protocolId != null">
        PROTOCOL_ID = #{protocolId,jdbcType=BIGINT},
      </if>
      <if test="imageName != null">
        IMAGE_NAME = #{imageName,jdbcType=VARCHAR},
      </if>
      <if test="fastUrl != null">
        FAST_URL = #{fastUrl,jdbcType=VARCHAR},
      </if>
      <if test="imageStatus != null">
        IMAGE_STATUS = #{imageStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        UPDATE_BY = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where PROTOCOL_IMAGE_ID = #{protocolImageId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hzcf.pojo.insurance.protocol.InsProtocolImage">
    update ins_protocol_image
    set PROTOCOL_ID = #{protocolId,jdbcType=BIGINT},
      IMAGE_NAME = #{imageName,jdbcType=VARCHAR},
      FAST_URL = #{fastUrl,jdbcType=VARCHAR},
      IMAGE_STATUS = #{imageStatus,jdbcType=CHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      UPDATE_BY = #{updateBy,jdbcType=VARCHAR}
    where PROTOCOL_IMAGE_ID = #{protocolImageId,jdbcType=BIGINT}
  </update>
  
   
  <!-- 查询图像列表 -->
  <select id="findAllRetMapByPage" parameterType="hashmap" resultType="hashmap">
 	SELECT
 		PROTOCOL_IMAGE_ID,
		PROTOCOL_ID,
		IMAGE_NAME,
		 FAST_URL
	FROM
		ins_protocol_image
	where PROTOCOL_ID = #{protocolId}
	and IMAGE_STATUS = '0'
	order  by  CREATE_TIME DESC
	limit #{startIndex},#{pageSize}
  </select>
  
   <!-- 查询总条数 -->
  <select id="findAllByPageCount" parameterType="hashmap" resultType="long">
 	SELECT
		count(1)
	FROM
		ins_protocol_image
	where PROTOCOL_ID = #{protocolId}
	and IMAGE_STATUS = '0'
  </select>
</mapper>